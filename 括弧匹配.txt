#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#define maxsize 2000
using namespace std;

typedef struct
{
    char *base;
    char *top;
    int stacksize;
} stack;

void InitStack(stack &s)
{
    s.base = (char *)malloc(maxsize * sizeof(char));
    if(!s.base)
    {
        exit(0);
    }

    s.top = s.base;
    s.stacksize = maxsize;
}

void push(stack &s, char e)
{
    if(s.top - s.base >= s.stacksize)
    {
        s.base = (char *)realloc(s.base, (s.stacksize + maxsize) * sizeof(char));
        s.top = s.base + s.stacksize;
        s.stacksize += maxsize;
    }

    *s.top++ = e;
}

void pop(stack &s)
{
    if(s.top == s.base)
    {
        exit(0);
    }

    else
    {
        s.top--;
    }
}

int EmptyStack(stack &s)
{
    if(s.top == s.base)
    {
        return 1;
    }

    else
    {
        return 0;
    }
}

int cop(stack s, char x)
{
    if(x == '(' || x == ')')
    {
        return 1;
    }

    else if(x == '{' || x == '}')
    {
        return 2;
    }

    else if(x == '[' || x == ']')
    {
        return 3;
    }

    return 0;
}

int main(void)
{
    char str[100];
    int i, flag, n;

    while(gets(str) != NULL)
    {
        stack s;
        InitStack(s);
        flag = 1;

        n = strlen(str);
        for(i = 0; i < n; i++)
        {
            if(str[i] == '(' || str[i] == '{' || str[i] == '[')
            {
                push(s, str[i]);
            }

            if(str[i] == ')' || str[i] == ']' || str[i] == '}')
            {
               if(cop(s, str[i]) != cop(s, *--s.top))
               {
                   flag = 0;
                   break;
               }
            }
        }

        if(flag && EmptyStack(s))
        {
            printf("yes\n");
        }

        else
        {
            printf("no\n");
        }

    }

    return 0;
}
